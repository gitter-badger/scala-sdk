{
  "swaggerVersion": "1.2",
  "apiVersion" : "2.0.0",
  "basePath": "https://gateway.watsonplatform.net/language-translation/api",
  "resourcePath": "/language-translation/api",
  "authorizations": {},
  "produces": [
    "application/json", "text/plain"
  ],
  "consumes": [
    "application/json"
  ],
  "apis": [
	 {
      "path": "/v2/translate",
      "description" : "Translates JSON input text from the source language to the target language.",
      "operations": [
        {
          "method": "POST",
          "summary": "Translates the input text from the source language to the target language.",
          "type": "translateResponse",
          "nickname": "translatePost",
          "consumes" : ["application/json"],
          "produces" : ["text/plain", "application/json"],
          "parameters": [
            {
              "name" : "body",
              "required" : true,
              "type" : "translateRequest",
              "description" : "The json request. The JSON must follow the format in the model schema, and must include the text, with optional source, target, and model_id.",
              "paramType": "body"
			},
            {
              "name": "accept",
              "description": "Describes the format of the return values. Valid values are “text/plain” (default), or “application/json”.",
              "required": false,
              "type": "string",
              "enum" : ["application/json", "text/plain"],
              "defaultValue" : "text/plain",
              "paramType": "header"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "Bad Request: missing required parameter(s)",
              "responseModel" : "errorResponse"
            },
            {
              "code": 404,
              "message": "Model Not Found: the specified model_id does not exist or specified source - target language pair is not supported",
              "responseModel" : "errorResponse"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
           ]
		},
		{
          "method": "GET",
          "summary": "Translates the input text from the source language to the target language.",
          "type": "translateResponse",
          "nickname": "translateGet",
          "consumes" : ["application/x-www-form-urlencoded"],
          "produces" : ["text/plain", "application/json"],
          "parameters": [
            {
              "name" : "model_id",
              "paramType": "query",
              "type" : "string",
              "description" : "The unique model_id of the translation model that is used to translate text. The model_id inherently specifies source language, target language, and domain. If the model_id is specified, there is no need for the source and target parameters, and the values are ignored."            
            },
            {
              "name" : "source",
              "paramType": "query",
              "type" : "string",
              "description" : "Used in combination with target as an alternative way to select the model for translation. When target and source are set, and model_id is not set, the system chooses a default model with the right language pair to translate (usually the model based on the news domain)."
            },
            {
              "name" : "target",
              "paramType": "query",
              "type" : "string",
              "description": "Used in combination with source as an alternative way to select which model is used for translation. When target and source are set, and model_id is not set, the system chooses a default model with the right language pair to translate (usually the model based on the news domain)."
            },
            {
              "name" : "text",
              "paramType": "query",
              "type" : "string",
              "required" : true,
              "description": "Input text in UTF-8 encoding. Multiple text query parameters indicate multiple input paragraphs, and a single string is valid input."
            },
            {
              "name": "accept",
              "description": "Describes the format of the return values. Valid values are “text/plain” (default), or “application/json”.",
              "required": false,
              "type": "string",
              "enum" : ["application/json", "text/plain"],
              "defaultValue" : "text/plain",
              "paramType": "header"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "Bad Request: missing required parameter(s)",
              "responseModel" : "errorResponse"
            },
            {
              "code": 404,
              "message": "Model Not Found: the specified model_id does not exist or specified source - target language pair is not supported",
              "responseModel" : "errorResponse"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
       ]
      },
    {
      "path": "/v2/identifiable_languages",
      "operations": [
        {
          "method": "GET",
          "summary": "Lists all languages that can be identified by the API.",
          "type": "identifiableResponse",
          "nickname": "listIdentifiableLanguages",
          "produces" : ["application/json"],
          "parameters": [],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
      ]
    },
    {
      "path": "/v2/identify",
      "operations": [
        {
          "method": "POST",
          "summary": "Identifies the language of the input text.",
          "notes" : "By default the return type is text/plain and the return value is the two letter language code for the identified language. For example, 'en-us' for U.S. English, or 'pt-br' for Brazilian Portuguese.",
          "type": "identifiedLanguages",
          "nickname": "identifyLanguagePost",
          "consumes" : ["text/plain"],
          "produces" : ["text/plain", "application/json"],
          "parameters": [
            {
              "name": "body",
              "description": "Input text in UTF-8 format.",
              "required": true,
              "type": "string",
              "paramType": "body"
            },
            {
              "name": "accept",
              "description": "Describes the format of the return values. Valid values are “text/plain” (default), or “application/json”. To retrieve a JSON object that contains a ranking of identified languages with confidence scores, set the accept header parameter to 'application/json'.",
              "required": false,
              "type": "string",
              "enum" : ["application/json", "text/plain"],
              "defaultValue" : "text/plain",
              "paramType": "header"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "Bad Request: missing required input text in request body",
              "responseModel" : "errorResponse"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        },
	    {
          "method": "GET",
          "summary": "Identifies the language of the input text.",
          "notes" : "By default the return type is text/plain and the return value is the two letter language code for the identified language. For example, 'en-us' for U.S. English, or 'pt-br' for Brazilian Portuguese.",
          "type": "identifiedLanguages",
          "nickname": "identifyLanguageGet",
          "consumes" : ["application/x-www-form-urlencoded"],
          "produces" : ["text/plain", "application/json"],
          "parameters": [
            {
              "name": "text",
              "description": "Input text in UTF-8 format.",
              "required": true,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "accept",
              "description": "Describes the format of the return values. Valid values are “text/plain” (default), or “application/json”. To retrieve a JSON object containing a ranking of identified languages with confidence scores, set the accept header parameter to 'application/json'.",
              "required": false,
              "type": "string",
              "enum" : ["application/json", "text/plain"],
              "defaultValue" : "text/plain",
              "paramType": "header"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 400,
              "message": "Bad Request: missing required text parameter",
              "responseModel" : "errorResponse"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
      ]
    }, 
    {
      "path": "/v2/models",
      "operations": [
        {
          "method": "GET",
          "summary": "Lists available standard and custom models by source or target language.",
          "type": "translationModels",
          "nickname": "listModels",
          "consumes" : ["application/x-www-form-urlencoded"],
          "produces" : ["application/json"],
          "parameters": [
            {
              "name": "source",
              "description": "Filter models by source language.",
              "required": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "target",
              "description": "Filter models by target language.",
              "required": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "default",
              "description": "Valid values are leaving it unset, 'true' and 'false'. When 'true', it filters models to return the default model or models. When 'false' it returns the non-default model or models. If not set, all models (default and non-default) return.",
              "required": false,
              "type": "boolean",
              "paramType": "query"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
	  ]
    },
    {
      "path": "/v2/models",
      "operations": [
        {
          "method": "POST",
          "summary": "Uploads a TMX glossary file on top of a domain to customize a translation model.",
          "notes": "When you call the API, you must specify one of the following file parameters: forced_glossary, parallel_corpus, or monolingual_corpus. <br>Depending on the size of the file, training can range from minutes for a glossary to several hours for a large parallel corpus. The cumulative file size of all uploaded glossary and corpus files is limited to 250 MB.",
          "type": "customModels",
          "nickname": "customtranslationModels",
          "consumes" : ["application/multipart/form-data form"],
          "produces" : ["application/json"],
          "parameters": [
            {
              "name": "base_model_id",
              "description": "Specifies the domain model that is used as the base for the training. To see current supported domain models, use the GET /v2/models parameter.",
              "required": true,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "A nickname you assign so that you can identify the trained model. Valid characters are letters, numbers, -, and _. No spaces.",
              "required": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "forced_glossary",
              "description": "Upload the valid TMX file with your term - translation pairs. Anything that is specified in this file completely overwrites the original domain data. Glossaries must be less than 10 MB you can only upload one glossary per call.",
              "required": false,
              "type": "file",
              "paramType": "data"
            },
            {
              "name": "parallel_corpus",
              "description": "A TMX file that contains entries that are treated as a parallel corpus instead of a glossary.",
              "required": false,
              "type": "file",
              "paramType": "data"
            },
            {
              "name": "monolingual_corpus",
              "description": "A UTF-8 encoded plain text file that is used to customize the target language model.",
              "required": false,
              "type": "file",
              "paramType": "data"
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success: Training is successfully started"
            },
            {
              "code": 400,
              "message": "Bad request: The base_model_id is not specified OR you've hit the maximum limit of customizations for this user",
              "responseModel" : "errorResponse"
            },
            {
              "code": 404,
              "message": "Not found: The base_model_id value is invalid",
              "responseModel" : "errorResponse"
            },
            {
              "code": 413,
              "message": "File size exceeded: Payload body exceeded the limit",
              "responseModel" : "errorResponse"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
      ]
    },
    {
      "path": "/v2/models/{model_id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns the training status of the translation model.",
          "type": "monitorTraining",
          "nickname": "monitorTrainingModels",
          "produces" : ["application/json"],
          "parameters": [
            {
              "name": "model_id",
              "description": "Model ID to use",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Status:OK"
            },
            {
              "code": 500,
              "message": "Internal Server Error",
              "responseModel" : "errorResponse"
            }
          ]
        }
      ]
    },
    {
      "path": "/v2/models/{model_id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Deletes a custom translation model.",
          "type": "deleteModels",
          "nickname": "deletetranslationModels",
          "produces" : ["application/json"],
          "parameters": [
            {
              "name": "model_id",
              "description": "Model ID to use",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages" : [
            {
              "code": 200,
              "message": "Success: Model deleted"
            },
            {
              "code": 400,
              "message": "Unauthorized: This model was created by IBM",
              "responseModel" : "errorResponse"
            },
            {
              "code": 404,
              "message": "Not found: The specified model_id was not found",
              "responseModel" : "errorResponse"
            }
          ]
        }
      ]
	}
  ],
  "models": {
    "translationModels": {
      "id": "translationModels",
      "description" : "The response type for listing existing translation models.",
      "required" : ["model_id", "name", "source", "target", "base_model_id", "domain", "customizable", "default", "owner", "status"],
      "properties" : {
        "model_id" : {
          "type" : "string",
          "description" : "A globally unique string that identifies the underlying model that is used for translation. This string contains all the information about source language, target language, domain, and various other related configurations."
        },
        "name" : {
          "type" : "string",
          "description" : "If a model is trained by a user, there might be an optional “name” parameter attached during training to help the user identify the model."
        },
        "source" : {
          "type" : "string",
          "description" : "Source language in two letter language code. Use the five letter code when clarifying between multiple supported languages. When model_id is used directly, it will override the source-target language combination. Also, when a two letter language code is used, but no suitable default is found, it returns an error."
        },
        "target" : {
          "type" : "string",
          "description" : "Target language in two letter language code."
        },
        "base_model_id" : {
          "type" : "string",
          "description" : "If this model is a custom model, this returns the base model that it is trained on. For a base model, this response value is empty."
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain of the translation model."
        },
        "customizable" : {
          "type" : "boolean",
          "description" : "Whether this model can be used as a base for customization."
        },
        "default" : {
          "type" : "boolean",
          "description" : "Whether this model is considered a default model and is used when the source and target languages are specified without the model_id."
        },
        "owner" : {
          "type" : "string",
          "description" : "Returns the bluemix-instance-id of the instance that created the model, or an empty string, if it’s a model that is trained by IBM."
        },
        "status" : {
          "type" : "string",
          "description" : "Availability of a model.",
          "enum" : ["available", "training", "error"]
        }
      }
    },
    "customModels": {
      "id": "customModels",
      "description" : "customModels model",
      "required" : ["model_id"],
      "properties" : {
        "model_id" : {
          "type" : "string",
          "description" : "Returns the base model that this translation model was trained on"
        }
      }
    },
    "monitorTraining": {
      "id": "monitorTraining",
      "description" : "deleteModels model",
      "required" : ["status", "base_model_id"],
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "The status of training. Possible responses are: training - training is still in progress, error - training did not complete because of an error, or available - training completed and the service is now available to use with your custom translation model"
        },
        "base_model_id" : {
          "type" : "string",
          "description" : "Returns the base model that this translation model was trained on"
        }
      }
    },
    "deleteModels": {
      "id": "deleteModels",
      "description" : "deleteModels model",
      "required" : ["deleted"],
      "properties" : {
        "deleted" : {
          "type" : "string",
          "description" : "Indicates that the model was successfully deleted."
        }
      }
    },
    "translateRequest": {
      "id": "translateRequest",
      "description" : "translateRequest model",
      "required" : ["text"],
      "properties" : {
        "model_id" : {
          "type" : "string",
          "description" : "The unique model_id of the translation model being used to translate text. The model_id inherently specifies source language, target language, and domain. If the model_id is specified, there is no need for the source and target parameters and the values are ignored."
        },
        "source" : {
          "type" : "string",
          "description" : "Used in combination with target as an alternative way to select the model for translation. When target and source are set, and model_id is not set, the system chooses a default model with the right language pair to translate (usually the model based on the news domain)."
        },
        "target" : {
          "type" : "string",
          "description" : "Used in combination with source as an alternative way to select the model for translation. When target and source are set, and model_id is not set, the system chooses a default model with the right language pair to translate (usually the model based on the news domain)."
        },
        "text" : {
          "type" : "array",
          "description" : "Input text in UTF-8 encoding. It is a list so that multiple sentences/paragraphs can be submitted. Also accept a single string, instead of an array, as valid input.",
          "items" : { "type" : "string"}
        }
      }
    },
    "translateResponse": {
      "id": "translateResponse",
      "description" : "translateResponse model",
      "required" : ["word_count", "character_count", "translations"],
      "properties" : {
        "word_count" : {
          "type" : "integer",
          "description" : "Number of words of the complete input text."
        },
        "character_count" : {
          "type" : "integer",
          "description" : "Number of characters of the complete input text."
        },
        "translations" : {
          "type" : "array",
          "description" : "List of translation output in UTF-8, corresponding to the list of input text.",
          "items" : { "$ref" : "translation"}
        }
      }
    },
    "translation": {
      "id": "translation",
      "description" : "translation model",
      "required" : ["translation"],
      "properties" : {
        "translation" : {
          "type" : "string",
          "description" : "Translation output in UTF-8."
        }
      }
    },
    "identifiableResponse": {
      "id": "identifiableResponse",
      "description" : "identifiableResponse model",
      "required" : ["languages"],
      "properties" : {
        "languages" : {
          "type" : "array",
          "description" : "A list of the identifiable languages.",
          "items" : { "type" : "language"}
        }
      }
    },
    "identifiedLanguages": {
      "id": "identifiedLanguages",
      "description" : "identifiedLanguages model",
      "required" : ["languages"],
      "properties" : {
        "languages" : {
          "type" : "array",
          "description" : "A ranking of languages with confidence scores.",
          "items" : {"type" : "identifiedLanguage"}
        }
      }
    },
    "errorResponse": {
      "id": "errorResponse",
      "description" : "errorResponse model",
      "required" : ["error_code", "error_message"],
      "properties" : {
        "error_code" : {
          "type" : "string",
          "description" : "A short identifier for the error."
        },
        "error_message" : {
          "type": "string",
          "description" : "A more detailed description of the error."
            }
	  	  }
	    }
      }
    }